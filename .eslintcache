[{"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\index.js":"1","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\reportWebVitals.js":"2","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\store.js":"3","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\App.js":"4","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\reducers\\userReducers.js":"5","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\reducers\\orderReducers.js":"6","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\reducers\\productReducers.js":"7","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\reducers\\cartReducers.js":"8","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\Footer.js":"9","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\HomeScreen.js":"10","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\Header.js":"11","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\ProductScreen.js":"12","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\ShippingScreen.js":"13","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\RegisterScreen.js":"14","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\CartScreen.js":"15","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\ProfileScreen.js":"16","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\LoginScreen.js":"17","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\UserEditScreen.js":"18","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\ChatFriend.js":"19","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\OrderListScreen.js":"20","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\PaymentScreen.js":"21","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\UserListScreen.js":"22","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\ProductEditScreen.js":"23","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\OrderScreen.js":"24","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\ProductListScreen.js":"25","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\PlaceOrderScreen.js":"26","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\Loader.js":"27","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\Product.js":"28","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\Paginate.js":"29","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\ProductCarousel.js":"30","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\Message.js":"31","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\FriendList.js":"32","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\Rating.js":"33","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\FormContainer.js":"34","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\CheckoutSteps.js":"35","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\SearchBox.js":"36","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\constants\\userConstants.js":"37","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\constants\\cartConstants.js":"38","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\constants\\orderConstants.js":"39","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\constants\\productConstants.js":"40","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\actions\\orderActions.js":"41","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\actions\\productActions.js":"42","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\actions\\cartActions.js":"43","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\actions\\userActions.js":"44","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\actions\\friendlistActions.js":"45","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\constants\\friendlistConstants.js":"46","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\Wishlist.js":"47","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\PreorderScreen.js":"48","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\ChatBox.js":"49","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\WishHandler.js":"50","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\reducers\\chatboxReducer.js":"51","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\reducers\\preorderReducer.js":"52","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\reducers\\wishReducers.js":"53","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\constants\\chatboxConstants.js":"54","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\constants\\preorderConstants.js":"55","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\constants\\wishConstants.js":"56","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\actions\\chatboxActions.js":"57","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\actions\\preorderActions.js":"58","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\actions\\wishActions.js":"59","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\WatchCarousel.js":"60"},{"size":628,"mtime":1680334882954,"results":"61","hashOfConfig":"62"},{"size":362,"mtime":1616789579000,"results":"63","hashOfConfig":"62"},{"size":2717,"mtime":1680329803431,"results":"64","hashOfConfig":"62"},{"size":2749,"mtime":1680348795655,"results":"65","hashOfConfig":"62"},{"size":3926,"mtime":1616789579000,"results":"66","hashOfConfig":"62"},{"size":4079,"mtime":1616789579000,"results":"67","hashOfConfig":"62"},{"size":4080,"mtime":1616789579000,"results":"68","hashOfConfig":"62"},{"size":923,"mtime":1680200095839,"results":"69","hashOfConfig":"62"},{"size":1618,"mtime":1680015003844,"results":"70","hashOfConfig":"62"},{"size":1791,"mtime":1681128122861,"results":"71","hashOfConfig":"62"},{"size":5236,"mtime":1681125496557,"results":"72","hashOfConfig":"62"},{"size":9818,"mtime":1681122316620,"results":"73","hashOfConfig":"62"},{"size":6132,"mtime":1681122348971,"results":"74","hashOfConfig":"62"},{"size":3922,"mtime":1616789579000,"results":"75","hashOfConfig":"62"},{"size":3330,"mtime":1681120311576,"results":"76","hashOfConfig":"62"},{"size":6947,"mtime":1681125419227,"results":"77","hashOfConfig":"62"},{"size":2549,"mtime":1616789579000,"results":"78","hashOfConfig":"62"},{"size":3912,"mtime":1616789579000,"results":"79","hashOfConfig":"62"},{"size":128,"mtime":1680100964189,"results":"80","hashOfConfig":"62"},{"size":3583,"mtime":1681125748649,"results":"81","hashOfConfig":"62"},{"size":1705,"mtime":1616789579000,"results":"82","hashOfConfig":"62"},{"size":3527,"mtime":1681125683332,"results":"83","hashOfConfig":"62"},{"size":10814,"mtime":1681125606158,"results":"84","hashOfConfig":"62"},{"size":7707,"mtime":1681124622472,"results":"85","hashOfConfig":"62"},{"size":5033,"mtime":1681125668498,"results":"86","hashOfConfig":"62"},{"size":5648,"mtime":1681123089670,"results":"87","hashOfConfig":"62"},{"size":458,"mtime":1616789579000,"results":"88","hashOfConfig":"62"},{"size":1340,"mtime":1681129464287,"results":"89","hashOfConfig":"62"},{"size":859,"mtime":1616789579000,"results":"90","hashOfConfig":"62"},{"size":1775,"mtime":1681121167229,"results":"91","hashOfConfig":"62"},{"size":228,"mtime":1616789579000,"results":"92","hashOfConfig":"62"},{"size":1117,"mtime":1680106885987,"results":"93","hashOfConfig":"62"},{"size":1886,"mtime":1616789579000,"results":"94","hashOfConfig":"62"},{"size":378,"mtime":1616789579000,"results":"95","hashOfConfig":"62"},{"size":1610,"mtime":1681122395782,"results":"96","hashOfConfig":"62"},{"size":1003,"mtime":1680015294280,"results":"97","hashOfConfig":"62"},{"size":1479,"mtime":1616789579000,"results":"98","hashOfConfig":"62"},{"size":287,"mtime":1616789579000,"results":"99","hashOfConfig":"62"},{"size":1240,"mtime":1616789579000,"results":"100","hashOfConfig":"62"},{"size":1502,"mtime":1616789579000,"results":"101","hashOfConfig":"62"},{"size":6237,"mtime":1680339805930,"results":"102","hashOfConfig":"62"},{"size":6197,"mtime":1680339805927,"results":"103","hashOfConfig":"62"},{"size":1370,"mtime":1680339805930,"results":"104","hashOfConfig":"62"},{"size":7636,"mtime":1680339805927,"results":"105","hashOfConfig":"62"},{"size":1303,"mtime":1680189660325,"results":"106","hashOfConfig":"62"},{"size":120,"mtime":1680101976455,"results":"107","hashOfConfig":"62"},{"size":2312,"mtime":1681133834065,"results":"108","hashOfConfig":"62"},{"size":3682,"mtime":1681133819456,"results":"109","hashOfConfig":"62"},{"size":1642,"mtime":1680331651407,"results":"110","hashOfConfig":"62"},{"size":13282,"mtime":1680338071426,"results":"111","hashOfConfig":"62"},{"size":368,"mtime":1680329787529,"results":"112","hashOfConfig":"62"},{"size":1147,"mtime":1680250945940,"results":"113","hashOfConfig":"62"},{"size":1057,"mtime":1680249692754,"results":"114","hashOfConfig":"62"},{"size":41,"mtime":1680329816255,"results":"115","hashOfConfig":"62"},{"size":116,"mtime":1680250934215,"results":"116","hashOfConfig":"62"},{"size":100,"mtime":1680248704816,"results":"117","hashOfConfig":"62"},{"size":291,"mtime":1680329816254,"results":"118","hashOfConfig":"62"},{"size":1049,"mtime":1680339805927,"results":"119","hashOfConfig":"62"},{"size":893,"mtime":1680339806791,"results":"120","hashOfConfig":"62"},{"size":1510,"mtime":1681127878221,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"l5mm9s",{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"124"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"124"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"124"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"124"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"124"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"124"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"124"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"124"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"124"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"124"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"124"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"124"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"124"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"124"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"124"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"124"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"124"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"124"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"124"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"124"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\index.js",[],["265","266"],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\reportWebVitals.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\store.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\App.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\reducers\\userReducers.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\reducers\\orderReducers.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\reducers\\productReducers.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\reducers\\cartReducers.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\Footer.js",["267","268","269"],"import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nfunction Footer() {\n  return (\n    <footer className=\"bg-dark text-white\">\n      <Container className=\"py-3\">\n        <Row>\n          <Col md={4} className=\"text-center mb-3 mb-md-0\">\n            <h5>Connect With Us</h5>\n            <div className=\"d-flex justify-content-center\">\n              <a href=\"#\" className=\"me-3 text-white\">\n                <i className=\"fab fa-facebook fa-lg\"></i>\n              </a>\n              <a href=\"#\" className=\"me-3 text-white\">\n                <i className=\"fab fa-twitter fa-lg\"></i>\n              </a>\n              <a href=\"#\" className=\"text-white\">\n                <i className=\"fab fa-instagram fa-lg\"></i>\n              </a>\n            </div>\n          </Col>\n          <Col md={4} className=\"text-center mb-3 mb-md-0\">\n            <h5>About Us</h5>\n            <p className=\"mb-0\">\n              WASD is a 4 keys gamesite, we can turn you into player.\n            </p>\n          </Col>\n          <Col md={4} className=\"text-center\">\n            <h5>Contact Us</h5>\n            <p className=\"mb-0\">\n              Email: contact@wasd.com <br />\n              Phone: 555-555-5555 <br />\n              Address: 123 Gaming Street, City, State Zip\n            </p>\n          </Col>\n        </Row>\n        <Row className=\"mt-3\">\n          <Col className=\"text-center\">\n            <p className=\"mb-0\">\n              &copy; {new Date().getFullYear()} W.A.S.D. All rights reserved.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n}\n\nexport default Footer;\n","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\HomeScreen.js",["270","271","272"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport { listProducts } from '../actions/productActions'\nimport { Link } from 'react-router-dom';\nimport WatchCarousel from '../components/WatchCarousel'\nimport '../styles/Header.css'\nfunction HomeScreen({ history }) {\n  const dispatch = useDispatch()\n  const productList = useSelector(state => state.productList)\n  const { error, loading, products, page, pages } = productList\n\n  let keyword = history.location.search\n\n  useEffect(() => {\n    dispatch(listProducts(keyword))\n  }, [dispatch, keyword])\n\n  return (\n    <div className=\"home-screen-container\">\n      {/* <Friend /> */}\n   \n      {/* <h1 className=\"home-screen-title\">Latest Games</h1> */}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <div className=\"home-screen-product-list-container\">\n          <Row className=\"home-screen-product-list\">\n            {products.map(product => (\n              \n              <Col key={product._id} sm={12} md={6} lg={4} xl={3} className=\"home-screen-product-col\" >\n                <Product product={product} />\n              </Col>\n          \n            ))}\n          </Row>\n          <Paginate page={page} pages={pages} keyword={keyword} className=\"home-screen-pagination\" />\n         \n        </div>\n      )}\n      {!keyword && <ProductCarousel />}\n\n\n{/* <WatchCarousel /> */}\n    </div>\n  )\n}\n\nexport default HomeScreen\n","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\Header.js",["273","274","275","276","277","278","279","280","281","282"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport SearchBox from './SearchBox';\nimport { logout } from '../actions/userActions';\nimport { FaHome, FaGamepad, FaShoppingCart, FaUser, FaHeart } from 'react-icons/fa';\nimport { GiSwordsEmblem } from 'react-icons/gi';\nimport { SiTwitch } from 'react-icons/si';\nimport Avatar from '../assets/WASDLogo.png';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FaFileInvoice } from 'react-icons/fa';\nimport { listProductDetails, createProductReview } from '../actions/productActions';\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\nimport { FaComments } from 'react-icons/fa';\nimport { Helmet } from \"react-helmet\";\n\nfunction Header({ match, history}) {\n  \n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n  // const addToPreorder = () => {\n  //   history.push(`/preorder/${match.params.id}?qty=${qty}`);\n  // };\n  \n  return (\n    <header>\n       {/* <Helmet>\n        <title>W A S D</title>\n        <link rel=\"icon\" type=\"image/png\" href=\"https://imgur.com/JxvCYdN.png\" sizes=\"16x16\" />\n      </Helmet> */}\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" style={{ height: '125px' }}>\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>\n              <img src={Avatar} className=\"d-inline-block align-top\" alt=\"WASD Logo\" style={{ width: '75px', height: '75px' }} />{' '}\n            </Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <SearchBox />\n            <Nav className=\"me-auto\">\n              <LinkContainer to=\"/\">\n                <Nav.Link>\n                  <FaHome className=\"me-2\" />\n                  Home\n                </Nav.Link>\n              </LinkContainer>\n              <NavDropdown title={<span><FaShoppingCart className=\"me-2\" />Purchases</span>}> \n  <LinkContainer to=\"/cart\">\n    <NavDropdown.Item>\n      <FaShoppingCart className=\"me-2\" />\n      Purchases\n    </NavDropdown.Item>\n  </LinkContainer>           \n\n  <LinkContainer to=\"/preorder\">\n \n  <NavDropdown.Item>\n    <FaFileInvoice className=\"me-2\" />\n    Preorder\n  </NavDropdown.Item>\n</LinkContainer>\n\n</NavDropdown>\n\n\n              <LinkContainer to=\"/wishlist\">\n              <Nav.Link>\n  <FontAwesomeIcon icon={faHeart} className=\"me-2\" />\n  Wishlist\n</Nav.Link>\n\n\n\n              </LinkContainer>\n\n              \n            </Nav>\n\n\n            <Nav>\n            <LinkContainer to=\"/chatbox\">\n                <Nav.Link>\n                  <FaComments />Chat\n                </Nav.Link>\n              </LinkContainer>\n              {/* <LinkContainer to=\"/stream\">\n                <Nav.Link>\n                  <SiTwitch className=\"me-2\" />\n                  Stream\n                </Nav.Link>\n              </LinkContainer> */}\n      \n      {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>\n                      <FaUser className=\"me-2\" />\n                      Profile\n                    </NavDropdown.Item>\n                  </LinkContainer>\n                  {/* <LinkContainer to=\"/orderlist\">\n                    <NavDropdown.Item>\n                      <GiSwordsEmblem className=\"me-2\" />\n                      List of Orders\n                    </NavDropdown.Item>\n                  </LinkContainer> */}\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <FaUser className=\"me-2\" />\n                    Login\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              \n{userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenue'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>Games</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/orderlist'>\n                                        <NavDropdown.Item>Purchase History</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                </NavDropdown>\n                            )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n}\n\nexport default Header;\n\n","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\ProductScreen.js",["283","284","285","286"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Button, Card, Form, ListGroupItem } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { listProductDetails, createProductReview } from '../actions/productActions';\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction ProductScreen({ match, history }) {\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('');\n  const [wishlist, setWishlist] = useState([]);\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector(state => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const userLogin = useSelector(state => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const productReviewCreate = useSelector(state => state.productReviewCreate);\n  const {\n    loading: loadingProductReview,\n    error: errorProductReview,\n    success: successProductReview,\n  } = productReviewCreate;\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0);\n      setComment('');\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n    }\n\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match, successProductReview]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  const addToWishlist = () => {\n    history.push(`/wishlist/${match.params.id}?qty=${qty}`);\n  };\n\n  const addToPreorder = () => {\n    history.push(`/preorder/${match.params.id}?qty=${qty}`);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createProductReview(\n        match.params.id, {\n        rating,\n        comment\n    }\n    ));\n  };\n\n  return (\n    <div>\n      <Link to=\"/\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n          <Row className='justify-content-center'>\n            <Col md={10} className='text-center'>\n              \n              <Image src={product.image} alt={product.name} fluid />\n        \n            </Col>\n\n          \n\n            <Col md={5}>\n              <br/>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                    color={\"#f8e825\"}\n                  />\n                </ListGroup.Item>\n\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n\n            <Col md={5}>\n            <br/>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                   \n\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <strong>${product.price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                  <Row>\n                    <Col>Status:</Col>\n                    <Col>\n                      {product.countInStock > 0 ? 'Available' : 'Upcoming'}\n                    </Col>\n                    \n                   \n                  </Row>\n                  <br/>\n                </ListGroup.Item>\n\n                {/* {product.countInStock > 0 && (\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Qty</Col>\n                      <Col>\n                        <Form.Control\n                          as=\"select\"\n                          value={qty}\n                          onChange={(e) => setQty(e.target.value)}\n                        >\n                          {[...Array(product.countInStock).keys()].map((x) => (\n                            <option key={x + 1} value={x + 1}>\n                              {x + 1}\n                            </option>\n                          ))}\n                        </Form.Control>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                )} */}\n                \n<ListGroup.Item className=\"d-flex justify-content-center\">\n  {product.countInStock ? (\n    <Button type=\"button\" className=\"btn-block\" onClick={addToCartHandler}>\n      Buy\n    </Button>\n  ) : (\n    <Button type=\"button\" className=\"btn-block\" disabled>\n      Upcoming\n    </Button>\n  )}\n\n  <Button\n    onClick={addToWishlist}\n    className=\"btn btn-light mr-3\"\n    type=\"button\"\n    \n    // enabled={product.countInStock === 0}\n  >\n    <FontAwesomeIcon icon={faHeart} /> Wishlist\n  </Button>\n\n  <Button\n    onClick={addToPreorder}\n    className=\"btn\"\n    type=\"button\"\n    disabled={product.countInStock > 0}\n  >\n    Pre-order\n  </Button>\n  \n</ListGroup.Item>\n\n\n\n              </ListGroup>\n            </Card>\n            \n        </Col>\n      </Row>\n      <Row className='justify-content-center'>\n        \n      <div className=\"border rounded p-3\">\n  <h1 className=\"text-center\">Watch</h1>\n \n  <Col className=\"text-center\">\n  \n   \n    <iframe width=\"780\" height=\"515\" src={product.watch} title=\"YouTube video player\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" ></iframe>\n   \n  </Col>\n</div>\n        <Col md={10} >\n          <h4 className='text-center'>People who reviewed this game.</h4>\n          {product.reviews.length === 0 && <Message>No Reviews</Message>}\n          <ListGroup variant=\"flush\">\n            {product.reviews.map((review) => (\n              <ListGroup.Item key={review._id}>\n                <strong>{review.name}</strong>\n                <Rating value={review.rating} color={\"#f8e825\"} />\n                <p>{review.createdAt.substring(0, 10)}</p>\n                <p>{review.comment}</p>\n              </ListGroup.Item>\n            ))}\n            <ListGroup.Item>\n      \n              {successProductReview && (\n                <Message variant=\"success\">\n                  Review submitted successfully\n                </Message>\n              )}\n              {loadingProductReview && <Loader />}\n              {errorProductReview && (\n                <Message variant=\"danger\">{errorProductReview}</Message>\n              )}\n              {userInfo ? (\n                <Form onSubmit={submitHandler}>\n                  <Form.Group controlId=\"rating\">\n                    <Form.Label>Rating</Form.Label>\n                    <Form.Control\n                      as=\"select\"\n                      value={rating}\n                      onChange={(e) => setRating(e.target.value)}\n                    >\n                      <option value=\"\">Select...</option>\n                      <option value=\"1\">1 - Poor</option>\n                      <option value=\"2\">2 - Fair</option>\n                      <option value=\"3\">3 - Good</option>\n                      <option value=\"4\">4 - Very Good</option>\n                      <option value=\"5\">5 - Excellent</option>\n                    \n\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group controlId='comment'>\n                                                        <Form.Label>Review</Form.Label>\n                                                        <Form.Control\n                                                            as='textarea'\n                                                            row='5'\n                                                            value={comment}\n                                                            onChange={(e) => setComment(e.target.value)}\n                                                        ></Form.Control>\n                                                    </Form.Group>\n\n                                                    <Button\n                                                        disabled={loadingProductReview}\n                                                        type='submit'\n                                                        variant='primary'\n                                                    >\n                                                        Submit\n                                                    </Button>\n\n                                                </Form>\n                                            ) : (\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\n                                                )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n                        </div>\n                    )\n\n            }\n\n\n        </div >\n    )\n}\n\nexport default ProductScreen\n","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\ShippingScreen.js",["287","288"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    const countries = [\n        'Afghanistan', 'Albania', 'Algeria', 'Andorra', 'Angola', 'Antigua and Barbuda', 'Argentina', 'Armenia', 'Australia',\n        'Austria', 'Azerbaijan', 'Bahamas', 'Bahrain', 'Bangladesh', 'Barbados', 'Belarus', 'Belgium', 'Belize', 'Benin',\n        'Bhutan', 'Bolivia', 'Bosnia and Herzegovina', 'Botswana', 'Brazil', 'Brunei', 'Bulgaria', 'Burkina Faso', 'Burundi',\n        'Cabo Verde', 'Cambodia', 'Cameroon', 'Canada', 'Central African Republic', 'Chad', 'Chile', 'China', 'Colombia',\n        'Comoros', 'Congo, Democratic Republic of the', 'Congo, Republic of the', 'Costa Rica', 'Cote d\\'Ivoire', 'Croatia',\n        'Cuba', 'Cyprus', 'Czech Republic', 'Denmark', 'Djibouti', 'Dominica', 'Dominican Republic', 'Ecuador', 'Egypt',\n        'El Salvador', 'Equatorial Guinea', 'Eritrea', 'Estonia', 'Eswatini (formerly Swaziland)', 'Ethiopia', 'Fiji',\n        'Finland', 'France', 'Gabon', 'Gambia', 'Georgia', 'Germany', 'Ghana', 'Greece', 'Grenada', 'Guatemala', 'Guinea',\n        'Guinea-Bissau', 'Guyana', 'Haiti', 'Honduras', 'Hungary', 'Iceland', 'India', 'Indonesia', 'Iran', 'Iraq', 'Ireland',\n        'Israel', 'Italy', 'Jamaica', 'Japan', 'Jordan', 'Kazakhstan', 'Kenya', 'Kiribati', 'Kosovo', 'Kuwait', 'Kyrgyzstan',\n        'Laos', 'Latvia', 'Lebanon', 'Lesotho', 'Liberia', 'Libya', 'Liechtenstein', 'Lithuania', 'Luxembourg', 'Madagascar',\n        'Malawi', 'Malaysia', 'Maldives', 'Mali', 'Malta', 'Marshall Islands', 'Mauritania', 'Mauritius', 'Mexico', 'Micronesia',\n        'Moldova', 'Monaco', 'Mongolia', 'Montenegro', 'Morocco', 'Mozambique', 'Myanmar (formerly Burma)', 'Namibia', 'Nauru',\n        'Nepal', 'Netherlands', 'New Zealand', 'Nicaragua', 'Niger', 'Nigeria', 'North Korea', 'North Macedonia (formerly Macedonia)',\n'Norway', 'Oman', 'Pakistan', 'Palau', 'Palestine', 'Panama', 'Papua New Guinea', 'Paraguay', 'Peru', 'Philippines',\n'Poland', 'Portugal', 'Qatar', 'Romania', 'Russia', 'Rwanda', 'Saint Kitts and Nevis', 'Saint Lucia',\n'Saint Vincent and the Grenadines', 'Samoa', 'San Marino', 'Sao Tome and Principe', 'Saudi Arabia', 'Senegal',\n'Serbia', 'Seychelles', 'Sierra Leone', 'Singapore', 'Slovakia', 'Slovenia', 'Solomon Islands', 'Somalia',\n'South Africa', 'South Korea', 'South Sudan', 'Spain', 'Sri Lanka', 'Sudan', 'Suriname', 'Sweden', 'Switzerland',\n'Syria', 'Taiwan', 'Tajikistan', 'Tanzania', 'Thailand', 'Timor-Leste (formerly East Timor)', 'Togo', 'Tonga',\n'Trinidad and Tobago', 'Tunisia', 'Turkey', 'Turkmenistan', 'Tuvalu', 'Uganda', 'Ukraine', 'United Arab Emirates',\n'United Kingdom', 'United States of America', 'Uruguay', 'Uzbekistan', 'Vanuatu', 'Vatican City (Holy See)',\n'Venezuela', 'Vietnam', 'Yemen', 'Zambia', 'Zimbabwe'\n];\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            {/* <h1>Contact Information</h1> */}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"email\"\n                        placeholder=\"Enter email\"\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Phone</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter phone'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                    required\n                    as='select'\n                    value={country ? country : ''}\n                    onChange={(e) => setCountry(e.target.value)}\n                >\n                    <option value=''>Select country</option>\n                    {countries.map((country, index) => (\n                        <option key={index} value={country}>\n                            {country}\n                        </option>\n                    ))}\n                </Form.Control>\n                </Form.Group>\n                <h1></h1>\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\RegisterScreen.js",["289"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Sign In\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\CartScreen.js",["290"],"import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nfunction CartScreen({ match, location, history }) {\n    const productId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=details')\n    }\n\n    return (\n        <Row>\n            <Col md={20}>\n                {/* <h1>Game:</h1> */}\n                {cartItems.length === 0 ? (\n                    <Message variant='info'>\n                        Choose your game <Link to='/'>Click Here</Link>\n                    </Message>\n                ) : (\n                        <ListGroup variant='flush'>\n                            {cartItems.map(item => (\n                                <ListGroup.Item key={item.product}>\n                                    <Row>\n                                        <Col className='text-center'md={12}>\n                                        <Link to={`/product/${item.product}`}>\n                                            <Image src={item.image} alt={item.name} fluid rounded />\n                                            </Link>\n                                        </Col>\n                                        <Col md={10}>\n                                           \n                                        </Col>\n\n                                      \n                                        \n\n                                       \n\n                                        <Col md={5}>\n    <Button\n        type='button'\n        variant='light'\n        onClick={() => removeFromCartHandler(item.product)}\n        style={{ backgroundColor: 'red', color: 'white' }}\n    >\n        Cancel\n    </Button>\n</Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>\n                    )}\n            </Col>\n\n            <Col md={20}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Cost</h2>\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup.Item className='text-center'>\n    <Button\n        type='button'\n        className='btn-block'\n        disabled={cartItems.length === 0}\n        onClick={checkoutHandler}\n        style={{ fontSize: '25px', padding: '5px 100px' }}\n    >\n        Purchase now\n    </Button>\n</ListGroup.Item>\n\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\ProfileScreen.js",["291","292"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <Row className='justify-content-center'>\n            <Col md={10} className='justify-content-center'>\n                <h2>Your Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n\n            <Col >\n                <h2 className='text-center'>Purchased Games</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                            <Table striped responsive className='table-sm text-center'>\n                                <thead>\n                                    <tr>\n                                        {/* <th>ID</th> */}\n                                        <th>Date of Purchase</th>\n                                        <th>Cost of Game</th>\n                                        <th>Paid</th>\n                                        <th>See Details</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {orders.map(order => (\n                                        <tr key={order._id}>\n                                            {/* <td>{order._id}</td> */}\n                                            <td>{order.createdAt.substring(0, 10)}</td>\n                                            <td>${order.totalPrice}</td>\n                                            <td>{order.isPaid ? <i className='fas fa-check' style={{ color: 'green' }}></i>: (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}</td>\n                                            <td>\n                                                <LinkContainer to={`/order/${order._id}`}>\n                                                    <Button className='btn-sm'>Details</Button>\n                                                </LinkContainer>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\LoginScreen.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\UserEditScreen.js",["293"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\ChatFriend.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\OrderListScreen.js",["294"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listOrders } from '../actions/orderActions'\n\nfunction OrderListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            <h1>Purchase History</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    {/* <th>ID</th> */}\n                                    <th>USER</th>\n                                    <th>DATE</th>\n                                    <th>Total</th>\n                                    <th>PAID</th>\n                                    {/* <th>DELIVERED</th> */}\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        {/* <td>{order._id}</td> */}\n                                        <td>{order.user && order.user.name}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>${order.totalPrice}</td>\n\n                                        <td>{order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        {/* <td>{order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td> */}\n\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    Details\n                                                </Button>\n                                            </LinkContainer>\n\n\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default OrderListScreen","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\PaymentScreen.js",["295"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\UserListScreen.js",["296"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    {/* <th>ID</th> */}\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        {/* <td>{user._id}</td> */}\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\ProductEditScreen.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\OrderScreen.js",["297","298","299","300"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AfWCkVHsxTIHY7IU9rVzqHLAFUcZjU6Lnrqf8h81x7cIdpIJHvomiPo4Vr_RqlayO56tCESJ9D0r6ldo'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n      \n    const download = () => {\n        window.location.href = order.download;\n      };\n      \n      \n\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <div>\n                    {/* <h1>Order: {order.Id}</h1> */}\n                    <Row>\n                        <Col md={12} >\n                           <Card >\n                            <ListGroup variant='flush'>\n                             \n\n                                <ListGroup.Item>\n                                    <h2 className='text-center'>Chosen Game</h2>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        Please choose a game to purchase.\n                            </Message> : (\n                                            <ListGroup variant='flush'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index} >\n                                                    <Row className=\"align-items-center\">\n                                                      <Col md={1} className=\"mx-auto\">\n                                                        <Image src={item.image} alt={item.name} fluid className=\"d-block\"  />\n                                                      </Col>\n                                                    </Row>\n                                                  </ListGroup.Item>\n\n                                                  \n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n                            </Card>\n                        </Col>\n\n                        <Col md={12}>\n                            <Card className='text-center'>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Purchase Summary</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Game Price:</Col>\n                                            <Col>${order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                               \n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Tax:</Col>\n                                            <Col>${order.taxPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Total:</Col>\n                                            <Col>${order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                                {/* {loadingDeliver && <Loader />}\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )} */}\n\n\n               \n{order.isPaid && order.paymentMethod === 'PayPal' && (\n  <Button onClick={download}>Download Game</Button>\n)}\n\n\n\n\n            \n         \n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            )\n}\n\nexport default OrderScreen\n","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\ProductListScreen.js",["301"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Games</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Game\n                    </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        {/* <th>ID</th> */}\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        <th>CATEGORY</th>\n                                        {/* <th>BRAND</th> */}\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            {/* <td>{product._id}</td> */}\n                                            <td>{product.name}</td>\n                                            <td>${product.price}</td>\n                                            <td>{product.category}</td>\n                                            {/* <td>{product.brand}</td> */}\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default ProductListScreen","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\PlaceOrderScreen.js",["302","303","304"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: [cart.cartItems[0]], // Only pass the first item in the array\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={12}>\n                    <ListGroup variant='flush' className='text-center'>\n                    <ListGroup.Item>\n                           \n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                    <ListGroup>\n                                        <ListGroup.Item>\n                                            <Row className=\"justify-content-center\">\n                                            <Col  className=\"d-flex justify-content-center\">\n    <Image src={cart.cartItems[0].image} alt={cart.cartItems[0].name} fluid rounded />\n</Col>\n\n\n                                               \n\n                                               \n</Row>\n</ListGroup.Item>\n</ListGroup>\n)}\n</ListGroup.Item>\n                        \n                        <ListGroup.Item>\n                            <h2>Details</h2>\n                         \n\n                            <p>\n                           \n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                             \n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                     \n</ListGroup>\n</Col>\n\n<Col md={12} className='text-center'>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            {/* <h2>Cost</h2> */}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Game Price:</Col>\n                                <Col>${cart.itemsPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        {/* <ListGroup.Item>\n                            <Row>\n                                <Col>Shipping:</Col>\n                                <Col>${cart.shippingPrice}</Col>\n                            </Row>\n                        </ListGroup.Item> */}\n\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Tax:</Col>\n                                <Col>${cart.taxPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Total:</Col>\n                                <Col>${cart.totalPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            {error && <Message variant='danger'>{error}</Message>}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Button\n                                type='button'\n                                className='btn-block'\n                                disabled={cart.cartItems.length === 0}\n                                onClick={placeOrder}\n                            >\n                                Buy Now!\n                            </Button>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Col>\n        </Row>\n    </div>\n)\n}\n\nexport default PlaceOrderScreen\n","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\Loader.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\Product.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\Paginate.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\ProductCarousel.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\Message.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\FriendList.js",["305","306","307"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchFriends, addFriend } from '../actions/friendlistActions';\r\n\r\nconst FriendList = () => {\r\n  const friends = useSelector(state => state.friendList.friends || []);\r\n  const { loading, error, friend } = friends || {}; // Add a default value for friends object\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchFriends());\r\n  }, [dispatch]);\r\n\r\n  const handleAddFriend = (e) => {\r\n    e.preventDefault();\r\n    const friendId = parseInt(e.target.elements.friendId.value);\r\n    dispatch(addFriend(friendId));\r\n    e.target.reset();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Friend List</h2>\r\n      <ul>\r\n      {friends && friends.map(friend => (\r\n          <li key={friend.id}>{friend.username}</li>\r\n        ))}\r\n      </ul>\r\n      <form onSubmit={handleAddFriend}>\r\n        <label htmlFor=\"friendId\">Add Friend:</label>\r\n        <input type=\"text\" name=\"friendId\" />\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default FriendList;\r\n",["308","309"],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\Rating.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\FormContainer.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\SearchBox.js",["310"],"import React, { useState } from 'react'\nimport { Button, Form } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nfunction SearchBox() {\n    const [keyword, setKeyword] = useState('')\n\n    let history = useHistory()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (keyword) {\n            history.push(`/?keyword=${keyword}&page=1`)\n        } else {\n            history.push(history.push(history.location.pathname))\n        }\n    }\n    return (\n        <Form onSubmit={submitHandler} inline>\n            <Form.Control\n                type='text'\n                name='q'\n                onChange={(e) => setKeyword(e.target.value)}\n                className='mr-sm-2 ml-sm-5'\n            ></Form.Control>\n\n            {/* <Button\n                type='submit'\n                variant='outline-success'\n                className='p-2'\n            >\n                Submit\n            </Button> */}\n          \n        </Form>\n    )\n}\n\nexport default SearchBox\n","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\constants\\userConstants.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\constants\\cartConstants.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\constants\\orderConstants.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\constants\\productConstants.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\actions\\orderActions.js",["311","312","313"],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `https://prodjfrance.pythonanywhere.com/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `https://prodjfrance.pythonanywhere.com/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `https://prodjfrance.pythonanywhere.com/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `https://prodjfrance.pythonanywhere.com/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `https://prodjfrance.pythonanywhere.com/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `https://prodjfrance.pythonanywhere.com/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\actions\\productActions.js",["314"],"import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`https://prodjfrance.pythonanywhere.com/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`https://prodjfrance.pythonanywhere.com/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`https://prodjfrance.pythonanywhere.com/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `https://prodjfrance.pythonanywhere.com/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `https://prodjfrance.pythonanywhere.com/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `https://prodjfrance.pythonanywhere.com/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `https://prodjfrance.pythonanywhere.com/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\actions\\cartActions.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\actions\\userActions.js",["315"],"import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            'https://prodjfrance.pythonanywhere.com/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            'https://prodjfrance.pythonanywhere.com/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `https://prodjfrance.pythonanywhere.com/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `https://prodjfrance.pythonanywhere.com/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `https://prodjfrance.pythonanywhere.com/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `https://prodjfrance.pythonanywhere.com/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `https://prodjfrance.pythonanywhere.com/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\actions\\friendlistActions.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\constants\\friendlistConstants.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\Wishlist.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\PreorderScreen.js",["316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333"],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\ChatBox.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\screens\\WishHandler.js",["334","335","336","337","338","339"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listProductDetails, createProductReview } from '../actions/productActions';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons';\r\n// import Wishhandler from './Wishhandler';\r\n// import { addToWishlist } from '../actions/wishActions';\r\n\r\nfunction ProductScreen({ match, history }) {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n//   const [wishlist, setWishlist] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector(state => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector(state => state.productReviewCreate);\r\n  const {\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n    success: successProductReview,\r\n  } = productReviewCreate;\r\n\r\n//   useEffect(() => {\r\n//     if (successProductReview) {\r\n//       setRating(0);\r\n//       setComment('');\r\n//       dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n//     }\r\n\r\n//     dispatch(listProductDetails(match.params.id));\r\n//   }, [dispatch, match, successProductReview]);\r\n\r\n//   const addToCartHandler = () => {\r\n//     history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n//   };\r\n\r\n  const addToWishlist = () => {\r\n    history.push(`/wishlist/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(createProductReview(\r\n        match.params.id, {\r\n        rating,\r\n        comment\r\n    }\r\n    ))\r\n}\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        {/* <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col> */}\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    // onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock == 0}\r\n                                                    type='button'>\r\n                                                    Buy\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                            <div class=\"text-center\">\r\n    {/* <Link onClick={wishlistHandler} className='btn btn-light my-3' type='button' disabled={product.countInStock == 0}> */}\r\n        {/* <FontAwesomeIcon icon={farHeart} /> Wishlist */}\r\n\r\n\r\n      <ListGroup.Item>\r\n  {/* <Link to={`/wishlist/${match.params.id}?qty=${qty}`}> */}\r\n    <Button onClick={() => addToWishlist()} className='btn btn-light my-3' type='button' icon={farHeart}>\r\n      Wishlist\r\n    </Button>\r\n  {/* </Link> */}\r\n</ListGroup.Item>\r\n\r\n\r\n{/* <Wishhandler /> */}\r\n\r\n    {/* </Link> */}\r\n</div>\r\n                           {/* <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={checkoutHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock == 0}\r\n                                                    type='button'>\r\n                                                    Buy\r\n                                                </Button>\r\n                                            </ListGroup.Item> */}\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\reducers\\chatboxReducer.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\reducers\\preorderReducer.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\reducers\\wishReducers.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\constants\\chatboxConstants.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\constants\\preorderConstants.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\constants\\wishConstants.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\actions\\chatboxActions.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\actions\\preorderActions.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\actions\\wishActions.js",[],"C:\\Users\\franc\\Desktop\\wasd-deploy\\wasdgame\\src\\components\\WatchCarousel.js",[],{"ruleId":"340","replacedBy":"341"},{"ruleId":"342","replacedBy":"343"},{"ruleId":"344","severity":1,"message":"345","line":12,"column":15,"nodeType":"346","endLine":12,"endColumn":55},{"ruleId":"344","severity":1,"message":"345","line":15,"column":15,"nodeType":"346","endLine":15,"endColumn":55},{"ruleId":"344","severity":1,"message":"345","line":18,"column":15,"nodeType":"346","endLine":18,"endColumn":50},{"ruleId":"347","severity":1,"message":"348","line":1,"column":17,"nodeType":"349","messageId":"350","endLine":1,"endColumn":25},{"ruleId":"347","severity":1,"message":"351","line":10,"column":10,"nodeType":"349","messageId":"350","endLine":10,"endColumn":14},{"ruleId":"347","severity":1,"message":"352","line":11,"column":8,"nodeType":"349","messageId":"350","endLine":11,"endColumn":21},{"ruleId":"347","severity":1,"message":"348","line":1,"column":17,"nodeType":"349","messageId":"350","endLine":1,"endColumn":25},{"ruleId":"347","severity":1,"message":"353","line":1,"column":27,"nodeType":"349","messageId":"350","endLine":1,"endColumn":36},{"ruleId":"347","severity":1,"message":"354","line":7,"column":18,"nodeType":"349","messageId":"350","endLine":7,"endColumn":27},{"ruleId":"347","severity":1,"message":"355","line":7,"column":53,"nodeType":"349","messageId":"350","endLine":7,"endColumn":60},{"ruleId":"347","severity":1,"message":"356","line":8,"column":10,"nodeType":"349","messageId":"350","endLine":8,"endColumn":24},{"ruleId":"347","severity":1,"message":"357","line":9,"column":10,"nodeType":"349","messageId":"350","endLine":9,"endColumn":18},{"ruleId":"347","severity":1,"message":"358","line":14,"column":10,"nodeType":"349","messageId":"350","endLine":14,"endColumn":28},{"ruleId":"347","severity":1,"message":"359","line":14,"column":30,"nodeType":"349","messageId":"350","endLine":14,"endColumn":49},{"ruleId":"347","severity":1,"message":"360","line":15,"column":10,"nodeType":"349","messageId":"350","endLine":15,"endColumn":37},{"ruleId":"347","severity":1,"message":"361","line":17,"column":10,"nodeType":"349","messageId":"350","endLine":17,"endColumn":16},{"ruleId":"347","severity":1,"message":"362","line":4,"column":58,"nodeType":"349","messageId":"350","endLine":4,"endColumn":71},{"ruleId":"347","severity":1,"message":"363","line":14,"column":15,"nodeType":"349","messageId":"350","endLine":14,"endColumn":21},{"ruleId":"347","severity":1,"message":"364","line":17,"column":10,"nodeType":"349","messageId":"350","endLine":17,"endColumn":18},{"ruleId":"347","severity":1,"message":"365","line":17,"column":20,"nodeType":"349","messageId":"350","endLine":17,"endColumn":31},{"ruleId":"347","severity":1,"message":"353","line":1,"column":27,"nodeType":"349","messageId":"350","endLine":1,"endColumn":36},{"ruleId":"366","severity":1,"message":"367","line":109,"column":17,"nodeType":"346","endLine":109,"endColumn":21},{"ruleId":"368","severity":1,"message":"369","line":34,"column":22,"nodeType":"370","messageId":"371","endLine":34,"endColumn":24},{"ruleId":"347","severity":1,"message":"372","line":4,"column":38,"nodeType":"349","messageId":"350","endLine":4,"endColumn":42},{"ruleId":"347","severity":1,"message":"351","line":2,"column":10,"nodeType":"349","messageId":"350","endLine":2,"endColumn":14},{"ruleId":"368","severity":1,"message":"369","line":53,"column":22,"nodeType":"370","messageId":"371","endLine":53,"endColumn":24},{"ruleId":"373","severity":1,"message":"374","line":43,"column":8,"nodeType":"375","endLine":43,"endColumn":46,"suggestions":"376"},{"ruleId":"347","severity":1,"message":"348","line":1,"column":17,"nodeType":"349","messageId":"350","endLine":1,"endColumn":25},{"ruleId":"347","severity":1,"message":"353","line":1,"column":27,"nodeType":"349","messageId":"350","endLine":1,"endColumn":36},{"ruleId":"347","severity":1,"message":"348","line":1,"column":17,"nodeType":"349","messageId":"350","endLine":1,"endColumn":25},{"ruleId":"347","severity":1,"message":"351","line":3,"column":10,"nodeType":"349","messageId":"350","endLine":3,"endColumn":14},{"ruleId":"347","severity":1,"message":"377","line":25,"column":22,"nodeType":"349","messageId":"350","endLine":25,"endColumn":36},{"ruleId":"373","severity":1,"message":"378","line":65,"column":8,"nodeType":"375","endLine":65,"endColumn":62,"suggestions":"379"},{"ruleId":"347","severity":1,"message":"380","line":72,"column":11,"nodeType":"349","messageId":"350","endLine":72,"endColumn":25},{"ruleId":"347","severity":1,"message":"348","line":1,"column":17,"nodeType":"349","messageId":"350","endLine":1,"endColumn":25},{"ruleId":"347","severity":1,"message":"348","line":1,"column":17,"nodeType":"349","messageId":"350","endLine":1,"endColumn":25},{"ruleId":"347","severity":1,"message":"351","line":3,"column":10,"nodeType":"349","messageId":"350","endLine":3,"endColumn":14},{"ruleId":"373","severity":1,"message":"381","line":35,"column":8,"nodeType":"375","endLine":35,"endColumn":26,"suggestions":"382"},{"ruleId":"347","severity":1,"message":"383","line":7,"column":11,"nodeType":"349","messageId":"350","endLine":7,"endColumn":18},{"ruleId":"347","severity":1,"message":"384","line":7,"column":20,"nodeType":"349","messageId":"350","endLine":7,"endColumn":25},{"ruleId":"347","severity":1,"message":"385","line":7,"column":27,"nodeType":"349","messageId":"350","endLine":7,"endColumn":33},{"ruleId":"340","replacedBy":"386"},{"ruleId":"342","replacedBy":"387"},{"ruleId":"347","severity":1,"message":"388","line":2,"column":10,"nodeType":"349","messageId":"350","endLine":2,"endColumn":16},{"ruleId":"347","severity":1,"message":"389","line":14,"column":5,"nodeType":"349","messageId":"350","endLine":14,"endColumn":20},{"ruleId":"347","severity":1,"message":"390","line":19,"column":5,"nodeType":"349","messageId":"350","endLine":19,"endColumn":24},{"ruleId":"347","severity":1,"message":"391","line":28,"column":5,"nodeType":"349","messageId":"350","endLine":28,"endColumn":24},{"ruleId":"347","severity":1,"message":"392","line":117,"column":17,"nodeType":"349","messageId":"350","endLine":117,"endColumn":21},{"ruleId":"347","severity":1,"message":"393","line":21,"column":5,"nodeType":"349","messageId":"350","endLine":21,"endColumn":30},{"ruleId":"347","severity":1,"message":"394","line":5,"column":27,"nodeType":"349","messageId":"350","endLine":5,"endColumn":36},{"ruleId":"347","severity":1,"message":"395","line":5,"column":46,"nodeType":"349","messageId":"350","endLine":5,"endColumn":50},{"ruleId":"347","severity":1,"message":"372","line":5,"column":52,"nodeType":"349","messageId":"350","endLine":5,"endColumn":56},{"ruleId":"347","severity":1,"message":"359","line":7,"column":30,"nodeType":"349","messageId":"350","endLine":7,"endColumn":49},{"ruleId":"347","severity":1,"message":"396","line":8,"column":8,"nodeType":"349","messageId":"350","endLine":8,"endColumn":14},{"ruleId":"347","severity":1,"message":"397","line":9,"column":8,"nodeType":"349","messageId":"350","endLine":9,"endColumn":14},{"ruleId":"347","severity":1,"message":"398","line":10,"column":8,"nodeType":"349","messageId":"350","endLine":10,"endColumn":15},{"ruleId":"347","severity":1,"message":"399","line":33,"column":10,"nodeType":"349","messageId":"350","endLine":33,"endColumn":16},{"ruleId":"347","severity":1,"message":"400","line":34,"column":10,"nodeType":"349","messageId":"350","endLine":34,"endColumn":17},{"ruleId":"347","severity":1,"message":"364","line":35,"column":10,"nodeType":"349","messageId":"350","endLine":35,"endColumn":18},{"ruleId":"347","severity":1,"message":"365","line":35,"column":20,"nodeType":"349","messageId":"350","endLine":35,"endColumn":31},{"ruleId":"347","severity":1,"message":"383","line":40,"column":11,"nodeType":"349","messageId":"350","endLine":40,"endColumn":18},{"ruleId":"347","severity":1,"message":"384","line":40,"column":20,"nodeType":"349","messageId":"350","endLine":40,"endColumn":25},{"ruleId":"347","severity":1,"message":"401","line":40,"column":27,"nodeType":"349","messageId":"350","endLine":40,"endColumn":34},{"ruleId":"347","severity":1,"message":"402","line":43,"column":11,"nodeType":"349","messageId":"350","endLine":43,"endColumn":19},{"ruleId":"347","severity":1,"message":"403","line":47,"column":14,"nodeType":"349","messageId":"350","endLine":47,"endColumn":34},{"ruleId":"347","severity":1,"message":"404","line":48,"column":12,"nodeType":"349","messageId":"350","endLine":48,"endColumn":30},{"ruleId":"366","severity":1,"message":"367","line":89,"column":17,"nodeType":"346","endLine":89,"endColumn":21},{"ruleId":"347","severity":1,"message":"353","line":1,"column":27,"nodeType":"349","messageId":"350","endLine":1,"endColumn":36},{"ruleId":"347","severity":1,"message":"358","line":8,"column":10,"nodeType":"349","messageId":"350","endLine":8,"endColumn":28},{"ruleId":"347","severity":1,"message":"360","line":9,"column":10,"nodeType":"349","messageId":"350","endLine":9,"endColumn":37},{"ruleId":"347","severity":1,"message":"405","line":10,"column":10,"nodeType":"349","messageId":"350","endLine":10,"endColumn":25},{"ruleId":"347","severity":1,"message":"363","line":16,"column":15,"nodeType":"349","messageId":"350","endLine":16,"endColumn":21},{"ruleId":"368","severity":1,"message":"406","line":152,"column":84,"nodeType":"370","messageId":"371","endLine":152,"endColumn":86},"no-native-reassign",["407"],"no-negated-in-lhs",["408"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'WatchCarousel' is defined but never used.","'useEffect' is defined but never used.","'FaGamepad' is defined but never used.","'FaHeart' is defined but never used.","'GiSwordsEmblem' is defined but never used.","'SiTwitch' is defined but never used.","'listProductDetails' is defined but never used.","'createProductReview' is defined but never used.","'PRODUCT_CREATE_REVIEW_RESET' is defined but never used.","'Helmet' is defined but never used.","'ListGroupItem' is defined but never used.","'setQty' is assigned a value but never used.","'wishlist' is assigned a value but never used.","'setWishlist' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["409"],"'loadingDeliver' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["410"],"'deliverHandler' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.",["411"],"'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'friend' is assigned a value but never used.",["407"],["408"],"'Button' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'data' is assigned a value but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'ListGroup' is defined but never used.","'Card' is defined but never used.","'Rating' is defined but never used.","'Loader' is defined but never used.","'Message' is defined but never used.","'rating' is assigned a value but never used.","'comment' is assigned a value but never used.","'product' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'loadingProductReview' is assigned a value but never used.","'errorProductReview' is assigned a value but never used.","'FontAwesomeIcon' is defined but never used.","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"412","fix":"413"},{"desc":"414","fix":"415"},{"desc":"416","fix":"417"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"418","text":"419"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"420","text":"421"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"422","text":"423"},[1432,1470],"[user, userId, successUpdate, history, dispatch]",[2272,2326],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]",[1239,1257],"[success, history, order._id, dispatch]"]